/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ContactImport } from './routes/contact'
import { Route as AboutImport } from './routes/about'

// Create Virtual Routes

const PizzaofthedayLazyImport = createFileRoute('/pizzaoftheday')()
const PastLazyImport = createFileRoute('/past')()
const OrderLazyImport = createFileRoute('/order')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const PizzaofthedayLazyRoute = PizzaofthedayLazyImport.update({
  id: '/pizzaoftheday',
  path: '/pizzaoftheday',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/pizzaoftheday.lazy').then((d) => d.Route))

const PastLazyRoute = PastLazyImport.update({
  id: '/past',
  path: '/past',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/past.lazy').then((d) => d.Route))

const OrderLazyRoute = OrderLazyImport.update({
  id: '/order',
  path: '/order',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/order.lazy').then((d) => d.Route))

const ContactRoute = ContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/order': {
      id: '/order'
      path: '/order'
      fullPath: '/order'
      preLoaderRoute: typeof OrderLazyImport
      parentRoute: typeof rootRoute
    }
    '/past': {
      id: '/past'
      path: '/past'
      fullPath: '/past'
      preLoaderRoute: typeof PastLazyImport
      parentRoute: typeof rootRoute
    }
    '/pizzaoftheday': {
      id: '/pizzaoftheday'
      path: '/pizzaoftheday'
      fullPath: '/pizzaoftheday'
      preLoaderRoute: typeof PizzaofthedayLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/order': typeof OrderLazyRoute
  '/past': typeof PastLazyRoute
  '/pizzaoftheday': typeof PizzaofthedayLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/order': typeof OrderLazyRoute
  '/past': typeof PastLazyRoute
  '/pizzaoftheday': typeof PizzaofthedayLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/order': typeof OrderLazyRoute
  '/past': typeof PastLazyRoute
  '/pizzaoftheday': typeof PizzaofthedayLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/contact' | '/order' | '/past' | '/pizzaoftheday'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/contact' | '/order' | '/past' | '/pizzaoftheday'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/contact'
    | '/order'
    | '/past'
    | '/pizzaoftheday'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutRoute: typeof AboutRoute
  ContactRoute: typeof ContactRoute
  OrderLazyRoute: typeof OrderLazyRoute
  PastLazyRoute: typeof PastLazyRoute
  PizzaofthedayLazyRoute: typeof PizzaofthedayLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutRoute: AboutRoute,
  ContactRoute: ContactRoute,
  OrderLazyRoute: OrderLazyRoute,
  PastLazyRoute: PastLazyRoute,
  PizzaofthedayLazyRoute: PizzaofthedayLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/about",
        "/contact",
        "/order",
        "/past",
        "/pizzaoftheday"
      ]
    },
    "/": {
      "filePath": "index.lazy.jsx"
    },
    "/about": {
      "filePath": "about.jsx"
    },
    "/contact": {
      "filePath": "contact.jsx"
    },
    "/order": {
      "filePath": "order.lazy.jsx"
    },
    "/past": {
      "filePath": "past.lazy.jsx"
    },
    "/pizzaoftheday": {
      "filePath": "pizzaoftheday.lazy.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
